% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/POST_FATE.relativeAbund.R
\name{POST_FATE.relativeAbund}
\alias{POST_FATE.relativeAbund}
\title{Create relative abundance maps for each Plant Functional Group for 
one (or several) specific year of a \code{FATE-HD} simulation}
\usage{
POST_FATE.relativeAbund(name.simulation, file.simulParam = NULL, year,
  opt.no_CPU = 1)
}
\arguments{
\item{name.simulation}{a \code{string} that corresponds to the main 
directory or simulation name of the \code{FATE-HD} simulation}

\item{file.simulParam}{a \code{string} that corresponds to the name of a 
parameter file that will be contained into the \code{PARAM_SIMUL} folder 
of the \code{FATE-HD} simulation}

\item{year}{an \code{integer} corresponding to the simulation year(s) that 
will be used to extract PFG abundance maps}

\item{opt.no_CPU}{default \code{1} (\emph{optional}). The number of 
resources that can be used to parallelize the \code{unzip/zip} of raster 
files}
}
\value{
One result folder is created :
\describe{
  \item{\file{ABUND_REL_perPFG \cr_allStrata}}{containing relative 
  abundance raster maps for each PFG across all strata}
}
}
\description{
This script is designed to produce raster maps of PFG 
simulated relative abundances for one (or several) specific \code{FATE-HD} 
simulation year.
}
\details{
This function allows one to obtain, for a specific \code{FATE-HD} 
simulation and a specific parameter file within this simulation, raster 
maps of PFG relative abundance. \cr

For each PFG and each selected simulation year, raster maps are retrieved 
from the results folder \code{ABUND_perPFG_perStrata} and unzipped. 
Informations extracted lead to the production of the same number of raster 
before the maps are compressed again :

\itemize{
  \item{for each selected simulation year(s), \strong{relative abundances} 
  within each stratum are calculated :
  \deqn{\frac{abund_{\text{PFG}_i, \text{Stratum}_j}}{abund_{allPFG, 
  allStrata}}} \cr \cr
  }
}

\strong{These \code{raster} files can then be used by other functions} :

\itemize{
  \item to produce presence/absence maps and graphics (see 
  \code{\link{POST_FATE.graphic_validationStatistics}})
}
}
\examples{

\dontrun{                      
POST_FATE.relativeAbund(name.simulation = "FATE_simulation"
                                        , file.simulParam = "Simul_parameters_V1.txt"
                                        , year = 850
                                        , opt.no_CPU = 1)
                                    
POST_FATE.relativeAbund(name.simulation = "FATE_simulation"
                                        , file.simulParam = "Simul_parameters_V1.txt"
                                        , year = c(850, 950)
                                        , opt.no_CPU = 1)
}
                                                        
                                                        
                                                        
## ----------------------------------------------------------------------------------------- ##
## Load example data
PNE_PARAM = .loadData("PNE_PARAM")
PNE_RESULTS = .loadData("PNE_RESULTS")

## PNE_PARAM$succ_light : data.frame
## PNE_PARAM$strata_limits : vector
## PNE_PARAM$disp : data.frame
## PNE_PARAM$dist : data.frame
## PNE_PARAM$global : vector
## PNE_PARAM$masks : rasterStack
## PNE_RESULTS$abund_str.equilibrium : rasterStack

## Create a skeleton folder
PRE_FATE.skeletonDirectory(name.simulation = "FATE_PNE")

## Create PFG succession parameter files : predefined of strata limits
tab = PNE_PARAM$succ_light[, c("PFG", "type", "height", "maturity", "longevity")]
PRE_FATE.params_PFGsuccession(name.simulation = "FATE_PNE"
                              , mat.PFG.succ = tab
                              , strata.limits = PNE_PARAM$strata_limits
                              , strata.limits_reduce = FALSE)

## Create PFG light parameter files : predefined of strata limits
tab = PNE_PARAM$succ_light[, c("PFG", "type", "height", "maturity", "longevity", "light")]
PRE_FATE.params_PFGlight(name.simulation = "FATE_PNE"
                         , mat.PFG.succ = tab
                         , strata.limits = PNE_PARAM$strata_limits
                         , strata.limits_reduce = FALSE)

## Create PFG dispersal parameter files
PRE_FATE.params_PFGdispersal(name.simulation = "FATE_PNE"
                             , mat.PFG.disp = PNE_PARAM$disp)

## Create PFG disturbance parameter files
PRE_FATE.params_PFGdisturbance(name.simulation = "FATE_PNE"
                               , mat.PFG.dist = PNE_PARAM$dist)

## Create a Global_parameters file
PRE_FATE.params_globalParameters(name.simulation = "FATE_PNE"
                                 , required.no_PFG = PNE_PARAM$global["NB_FG"]
                                 , required.no_STRATA = PNE_PARAM$global["NB_STRATUM"]
                                 , required.simul_duration = PNE_PARAM$global["SIMULATION_DURATION"]
                                 , required.seeding_duration = PNE_PARAM$global["SEEDING_DURATION"]
                                 , required.seeding_timestep = PNE_PARAM$global["SEEDING_TIMESTEP"]
                                 , required.seeding_input = PNE_PARAM$global["SEEDING_INPUT"]
                                 , required.max_by_cohort = PNE_PARAM$global["MAX_BY_COHORT"]
                                 , required.max_abund_low = PNE_PARAM$global["MAX_ABUND_LOW"]
                                 , required.max_abund_medium = PNE_PARAM$global["MAX_ABUND_MEDIUM"]
                                 , required.max_abund_high = PNE_PARAM$global["MAX_ABUND_HIGH"]
                                 , doLight = TRUE
                                 , LIGHT.thresh_medium = PNE_PARAM$global["LIGHT.thresh_medium"]
                                 , LIGHT.thresh_low = PNE_PARAM$global["LIGHT.thresh_low"]
                                 , doDispersal = TRUE
                                 , DISPERSAL.mode = PNE_PARAM$global["DISPERSAL.mode"]
                                 , doHabSuitability = TRUE
                                 , HABSUIT.ref_option = PNE_PARAM$global["HABSUIT.ref_option"]
                                 , doDisturbances = TRUE
                                 , DIST.no = PNE_PARAM$global["DIST.no"]
                                 , DIST.no_sub = PNE_PARAM$global["DIST.no_sub"]
                                 , DIST.freq = rep(PNE_PARAM$global["DIST.freq"]
                                                   , PNE_PARAM$global["DIST.no"])
)

## Create simulation masks
library(raster)
writeRaster(PNE_PARAM$masks$maskEcrins
            , file = "FATE_PNE/DATA/MASK/mask.tif"
            , overwrite = TRUE)
writeRaster(PNE_PARAM$masks$noDisturb
            , file = "FATE_PNE/DATA/MASK/noDisturb.tif"
            , overwrite = TRUE)

## Create simulation parameters file
PRE_FATE.params_simulParameters(name.simulation = "FATE_PNE"
                                , name.mask = "mask.tif"
                                , name.dist = "noDisturb.tif")

## Create results folders
name.folder = "FATE_PNE"
name.simul = "SIMUL_V1"
dir1 = paste0(name.folder, "/RESULTS/", name.simul, "/ABUND_perPFG_allStrata")
dir2 = paste0(name.folder, "/RESULTS/", name.simul, "/ABUND_perPFG_perStrata")

dir.create(dir1, recursive = TRUE)
dir.create(dir2, recursive = TRUE)

## Create results files
PFG.names = PNE_PARAM$succ_light$PFG
for (pfg in PFG.names)
{
  ind = grep(pfg, names(PNE_RESULTS$abund_str.equilibrium))
  stk = PNE_RESULTS$abund_str.equilibrium[[ind]] * 1
  ras = sum(stk)
  writeRaster(ras
              , filename = paste0(dir1, "/Abund_YEAR_800_", pfg, "_STRATA_all.tif")
              , overwrite = TRUE)
}

## Create relative abundance maps
POST_FATE.relativeAbund(name.simulation = name.folder
                                        , file.simulParam = "Simul_parameters_V1.txt"
                                        , year = 800
                                        , opt.no_CPU = 1)
                                    

}
\seealso{
\code{\link{POST_FATE.graphic_validationStatistics}}
}
\author{
Maya Gu√©guen
}
\keyword{FATE,}
\keyword{abundance}
\keyword{outputs,}
\keyword{relative}
