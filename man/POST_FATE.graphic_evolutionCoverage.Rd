% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/POST_FATE.graphic_evolutionCoverage.R
\name{POST_FATE.graphic_evolutionCoverage}
\alias{POST_FATE.graphic_evolutionCoverage}
\title{Create a graphical representation of the evolution of PFG coverage
and abundance through time for a \code{FATE} simulation}
\usage{
POST_FATE.graphic_evolutionCoverage(
  name.simulation,
  file.simulParam = NULL,
  opt.abund_fixedScale = TRUE,
  opt.doPlot = TRUE
)
}
\arguments{
\item{name.simulation}{a \code{string} corresponding to the main directory 
or simulation name of the \code{FATE} simulation}

\item{file.simulParam}{default \code{NULL}. \cr A \code{string} 
corresponding to the name of a parameter file that will be contained into 
the \code{PARAM_SIMUL} folder of the \code{FATE} simulation}

\item{opt.abund_fixedScale}{default \code{TRUE}. If \code{FALSE}, the 
ordinate scale will be adapted for each PFG for the graphical representation 
of the  evolution of abundances through time}

\item{opt.doPlot}{(\emph{optional}) default \code{TRUE}. \cr If \code{TRUE}, 
plot(s) will be processed, otherwise only the calculation and reorganization 
of outputs will occur, be saved and returned}
}
\value{
A \code{list} containing two \code{data.frame} objects with the 
following columns, and two \code{ggplot2} objects :

\describe{
  \item{tab.spaceOccupancy}{
    \describe{
      \item{\code{PFG}}{concerned plant functional group (for abundance)}
      \item{\code{HAB}}{concerned habitat}
      \item{\emph{year}}{concerned simulation year}
      \item{\code{spaceOccupancy}}{number of occupied pixels divided by the 
      total number of pixels within the studied area}
    }
  }
  \item{tab.totalAbundance}{
    \describe{
      \item{\code{PFG}}{concerned plant functional group (for abundance)}
      \item{\code{HAB}}{concerned habitat}
      \item{\emph{year}}{concerned simulation year}
      \item{\code{totalAbundance}}{total abundance over all the pixels 
      within the studied area}
    }
  }
  \item{graph.spaceOccupancy}{\code{ggplot2} object, representing the 
  evolution of each PFG space occupancy}
  \item{graph.totalAbundance}{\code{ggplot2} object, representing the 
  evolution of each PFG total abundance \cr \cr}
}


Two \code{POST_FATE_TABLE_ZONE_evolution_[...].csv} files are created : 
\describe{
  \item{\file{spaceOccupancy}}{always, containing \code{tab.spaceOccupancy}}
  \item{\file{totalAbundance}}{always, containing \code{tab.totalAbundance}}
}


Two \code{POST_FATE_[...].pdf} files are created : 
\describe{
  \item{\file{GRAPHIC_A \cr spaceOccupancy}}{to visualize for each PFG the 
  evolution of its occupation of the studied area through simulation time}
  \item{\file{GRAPHIC_A \cr totalAbundance}}{to visualize for each PFG the 
  evolution of its abundance within the whole studied area through 
  simulation time}
}
}
\description{
This script is designed to produce two graphical 
representations for a \code{FATE} simulation : 1) the evolution through
time of the space occupation of each PFG ; 2) the evolution through time
of the abundance of each PFG. These graphics represent both the evolution 
over the whole area.
}
\details{
This function allows to obtain, for a specific \code{FATE} simulation and 
a specific parameter file within this simulation, two preanalytical 
graphics : 

\itemize{
  \item{the evolution of \strong{space occupancy} of each plant functional 
  group through simulation time, \cr with \emph{space occupancy} 
  representing the percentage of pixels within the mask of studied area 
  where the PFG is present
  }
  \item{the evolution of \strong{total abundance} of each plant functional 
  group through simulation time, \cr with \emph{total abundance} being the 
  sum over the whole studied area of the PFG abundances (\code{FATE} 
  \emph{arbitrary unit})
  }
}

If the information has been provided (see 
\code{\link{POST_FATE.temporalEvolution}}), the graphics will be also done 
per habitat. \cr \cr

\strong{It requires} that the \code{\link{POST_FATE.temporalEvolution}} 
function has been run and that the file 
\code{POST_FATE_TABLE_PIXEL_evolution_abundance.csv} exists.
}
\examples{

\dontrun{                      
POST_FATE.graphic_evolutionCoverage(name.simulation = "FATE_simulation"
                                    , file.simulParam = "Simul_parameters_V1.txt")
                                    
POST_FATE.graphic_evolutionCoverage(name.simulation = "FATE_simulation"
                                    , file.simulParam = "Simul_parameters_V1.txt"
                                    , opt.abund_fixedScale = FALSE)
}



## ----------------------------------------------------------------------------------------- ##
## Load example data
PNE_PFG = .loadData("PNE_PFG")
PNE_PARAM = .loadData("PNE_PARAM")
PNE_RESULTS = .loadData("PNE_RESULTS")

## PNE_PFG$PFG.observations : data.frame
## PNE_PARAM$succ_light : data.frame
## PNE_PARAM$strata_limits : vector
## PNE_PARAM$disp : data.frame
## PNE_PARAM$dist : data.frame
## PNE_PARAM$global : vector
## PNE_PARAM$masks : rasterStack
## PNE_RESULTS$abund_str.equilibrium : rasterStack

## Create a skeleton folder
PRE_FATE.skeletonDirectory(name.simulation = "FATE_PNE")

## Create PFG succession parameter files : predefined of strata limits
tab = PNE_PARAM$succ_light[, c("PFG", "type", "height", "maturity", "longevity")]
PRE_FATE.params_PFGsuccession(name.simulation = "FATE_PNE"
                              , mat.PFG.succ = tab
                              , strata.limits = PNE_PARAM$strata_limits
                              , strata.limits_reduce = FALSE)

## Create PFG light parameter files : predefined of strata limits
tab = PNE_PARAM$succ_light[, c("PFG", "type", "height", "maturity", "longevity", "light")]
PRE_FATE.params_PFGlight(name.simulation = "FATE_PNE"
                         , mat.PFG.succ = tab
                         , strata.limits = PNE_PARAM$strata_limits
                         , strata.limits_reduce = FALSE)

## Create PFG dispersal parameter files
PRE_FATE.params_PFGdispersal(name.simulation = "FATE_PNE"
                             , mat.PFG.disp = PNE_PARAM$disp)

## Create PFG disturbance parameter files
PRE_FATE.params_PFGdisturbance(name.simulation = "FATE_PNE"
                               , mat.PFG.dist = PNE_PARAM$dist)

## Create a Global_parameters file
PRE_FATE.params_globalParameters(name.simulation = "FATE_PNE"
                                 , required.no_PFG = PNE_PARAM$global["NB_FG"]
                                 , required.no_STRATA = PNE_PARAM$global["NB_STRATUM"]
                                 , required.simul_duration = PNE_PARAM$global["SIMULATION_DURATION"]
                                 , required.seeding_duration = PNE_PARAM$global["SEEDING_DURATION"]
                                 , required.seeding_timestep = PNE_PARAM$global["SEEDING_TIMESTEP"]
                                 , required.seeding_input = PNE_PARAM$global["SEEDING_INPUT"]
                                 , required.max_abund_low = PNE_PARAM$global["MAX_ABUND_LOW"]
                                 , required.max_abund_medium = PNE_PARAM$global["MAX_ABUND_MEDIUM"]
                                 , required.max_abund_high = PNE_PARAM$global["MAX_ABUND_HIGH"]
                                 , doLight = TRUE
                                 , LIGHT.thresh_medium = PNE_PARAM$global["LIGHT.thresh_medium"]
                                 , LIGHT.thresh_low = PNE_PARAM$global["LIGHT.thresh_low"]
                                 , doDispersal = TRUE
                                 , DISPERSAL.mode = PNE_PARAM$global["DISPERSAL.mode"]
                                 , doHabSuitability = TRUE
                                 , HABSUIT.ref_option = PNE_PARAM$global["HABSUIT.ref_option"]
                                 , doDisturbances = TRUE
                                 , DIST.no = PNE_PARAM$global["DIST.no"]
                                 , DIST.no_sub = PNE_PARAM$global["DIST.no_sub"]
                                 , DIST.freq = rep(PNE_PARAM$global["DIST.freq"]
                                                   , PNE_PARAM$global["DIST.no"])
)

## Create simulation masks
library(raster)
writeRaster(PNE_PARAM$masks$maskEcrins
            , file = "FATE_PNE/DATA/MASK/mask.tif"
            , overwrite = TRUE)
writeRaster(PNE_PARAM$masks$noDisturb
            , file = "FATE_PNE/DATA/MASK/noDisturb.tif"
            , overwrite = TRUE)

## Create simulation parameters file
PRE_FATE.params_simulParameters(name.simulation = "FATE_PNE"
                                , name.mask = "mask.tif"
                                , name.dist = "noDisturb.tif")

## Create results folders
name.folder = "FATE_PNE"
name.simul = "SIMUL_V1"
dir1 = paste0(name.folder, "/RESULTS/", name.simul, "/ABUND_perPFG_allStrata")
dir2 = paste0(name.folder, "/RESULTS/", name.simul, "/ABUND_perPFG_perStrata")
dir3 = paste0(name.folder, "/RESULTS/", name.simul, "/LIGHT")
dir4 = paste0(name.folder, "/RESULTS/", name.simul, "/SOIL")

dir.create(dir1, recursive = TRUE)
dir.create(dir2, recursive = TRUE)
dir.create(dir3, recursive = TRUE)
dir.create(dir4, recursive = TRUE)

## Create results files
PFG.names = PNE_PARAM$succ_light$PFG
PFG.short = sapply(PFG.names, function(x) strsplit(x, "_")[[1]][1])
for (pfg in PFG.names)
{
  ind = grep(pfg, names(PNE_RESULTS$abund_str.equilibrium))
  stk = PNE_RESULTS$abund_str.equilibrium[[ind]]
  ras = sum(stk)
  writeRaster(ras
              , filename = paste0(dir1, "/Abund_YEAR_800_", pfg, "_STRATA_all.tif")
              , overwrite = TRUE)
              
  for (ye in seq(100, 700, 100))
  {
    file.copy(from = paste0(dir1, "/Abund_YEAR_800_", pfg, "_STRATA_all.tif")
              , to = paste0(dir1, "/Abund_YEAR_", ye, "_", pfg, "_STRATA_all.tif"))
  }
}


## Create temporal table
tempEvol = POST_FATE.temporalEvolution(name.simulation = "FATE_PNE"
                                       , file.simulParam = "Simul_parameters_V1.txt"
                                       , opt.no_CPU = 1)

## Create evolution coverage and space occupancy graphics
graph = POST_FATE.graphic_evolutionCoverage(name.simulation = "FATE_PNE"
                                            , file.simulParam = "Simul_parameters_V1.txt")
str(graph)


}
\seealso{
\code{\link{POST_FATE.temporalEvolution}}
}
\author{
Maya Guéguen
}
\keyword{FATE,}
\keyword{abundance}
\keyword{outputs,}
\keyword{through}
\keyword{time}
